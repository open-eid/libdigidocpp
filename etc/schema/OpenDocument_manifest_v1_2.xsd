<?xml version="1.0" encoding="UTF-8"?>
<!--
  Open Document Format for Office Applications (OpenDocument) Version 1.2
  OASIS Standard, 29 September 2011
  Manifest Relax-NG Schema
  Source: http://docs.oasis-open.org/office/v1.2/os/
  Copyright (c) OASIS Open 2002-2011. All Rights Reserved.
  
  All capitalized terms in the following text have the meanings assigned to them
  in the OASIS Intellectual Property Rights Policy (the "OASIS IPR Policy"). The
  full Policy may be found at the OASIS website.
  
  This document and translations of it may be copied and furnished to others, and
  derivative works that comment on or otherwise explain it or assist in its
  implementation may be prepared, copied, published, and distributed, in whole or
  in part, without restriction of any kind, provided that the above copyright
  notice and this section are included on all such copies and derivative works.
  However, this document itself may not be modified in any way, including by
  removing the copyright notice or references to OASIS, except as needed for the
  purpose of developing any document or deliverable produced by an OASIS
  Technical Committee (in which case the rules applicable to copyrights, as set
  forth in the OASIS IPR Policy, must be followed) or as required to translate it
  into languages other than English.
  
  The limited permissions granted above are perpetual and will not be revoked by
  OASIS or its successors or assigns.
  
  This document and the information contained herein is provided on an "AS IS"
  basis and OASIS DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT
  LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT
  INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR
  FITNESS FOR A PARTICULAR PURPOSE. 
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:opendocument:xmlns:manifest:1.0" xmlns:manifest="urn:oasis:names:tc:opendocument:xmlns:manifest:1.0">
  <xs:element name="manifest">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="manifest:file-entry"/>
      </xs:sequence>
      <xs:attributeGroup ref="manifest:manifest-attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="manifest-attlist">
    <xs:attribute name="version" use="required" form="qualified">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="1.2"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="file-entry">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="manifest:encryption-data"/>
      </xs:sequence>
      <xs:attributeGroup ref="manifest:file-entry-attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="file-entry-attlist">
    <xs:attribute name="full-path" use="required" form="qualified" type="manifest:string"/>
    <xs:attribute name="size" form="qualified" type="manifest:nonNegativeInteger"/>
    <xs:attribute name="media-type" use="required" form="qualified" type="manifest:string"/>
    <xs:attribute name="preferred-view-mode" form="qualified">
      <xs:simpleType>
        <xs:union memberTypes="manifest:namespacedToken">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="edit"/>
            </xs:restriction>
          </xs:simpleType>
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="presentation-slide-show"/>
            </xs:restriction>
          </xs:simpleType>
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="read-only"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:union>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="version" form="qualified" type="manifest:string"/>
  </xs:attributeGroup>
  <xs:element name="encryption-data">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="manifest:algorithm"/>
        <xs:element minOccurs="0" ref="manifest:start-key-generation"/>
        <xs:element ref="manifest:key-derivation"/>
      </xs:sequence>
      <xs:attributeGroup ref="manifest:encryption-data-attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="encryption-data-attlist">
    <xs:attribute name="checksum-type" use="required" form="qualified">
      <xs:simpleType>
        <xs:union memberTypes="manifest:anyURI">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="SHA1/1K"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:union>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="checksum" use="required" form="qualified" type="manifest:base64Binary"/>
  </xs:attributeGroup>
  <xs:element name="algorithm">
    <xs:complexType>
      <xs:group ref="manifest:anyElements"/>
      <xs:attributeGroup ref="manifest:algorithm-attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="algorithm-attlist">
    <xs:attribute name="algorithm-name" use="required" form="qualified">
      <xs:simpleType>
        <xs:union memberTypes="manifest:anyURI">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="Blowfish CFB"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:union>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="initialisation-vector" use="required" form="qualified" type="manifest:base64Binary"/>
  </xs:attributeGroup>
  <xs:group name="anyAttListOrElements">
    <xs:sequence>
      <xs:group ref="manifest:anyElements"/>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="anyAttListOrElements">
    <xs:anyAttribute processContents="skip"/>
  </xs:attributeGroup>
  <xs:group name="anyElements">
    <xs:sequence>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="skip"/>
    </xs:sequence>
  </xs:group>
  <xs:element name="key-derivation">
    <xs:complexType>
      <xs:attributeGroup ref="manifest:key-derivation-attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="key-derivation-attlist">
    <xs:attribute name="key-derivation-name" use="required" form="qualified">
      <xs:simpleType>
        <xs:union memberTypes="manifest:anyURI">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="PBKDF2"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:union>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="salt" use="required" form="qualified" type="manifest:base64Binary"/>
    <xs:attribute name="iteration-count" use="required" form="qualified" type="manifest:nonNegativeInteger"/>
    <xs:attribute name="key-size" form="qualified" type="manifest:nonNegativeInteger"/>
  </xs:attributeGroup>
  <xs:element name="start-key-generation">
    <xs:complexType>
      <xs:attributeGroup ref="manifest:start-key-generation-attlist"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="start-key-generation-attlist">
    <xs:attribute name="start-key-generation-name" use="required" form="qualified">
      <xs:simpleType>
        <xs:union memberTypes="manifest:anyURI">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="SHA1"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:union>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="key-size" form="qualified" type="manifest:nonNegativeInteger"/>
  </xs:attributeGroup>
  <xs:simpleType name="base64Binary">
    <xs:restriction base="xs:base64Binary"/>
  </xs:simpleType>
  <xs:simpleType name="namespacedToken">
    <xs:restriction base="xs:QName">
      <xs:pattern value="[^:]+:[^:]+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="nonNegativeInteger">
    <xs:restriction base="xs:nonNegativeInteger"/>
  </xs:simpleType>
  <xs:simpleType name="string">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="anyURI">
    <xs:restriction base="xs:anyURI"/>
  </xs:simpleType>
</xs:schema>
