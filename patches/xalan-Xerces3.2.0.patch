diff -U3 -r xalan-c-1.11.orig/c/src/xalanc/Harness/XalanDiagnosticMemoryManager.cpp xalan-c-1.11/c/src/xalanc/Harness/XalanDiagnosticMemoryManager.cpp
--- xalan-c-1.11.orig/c/src/xalanc/Harness/XalanDiagnosticMemoryManager.cpp	2012-03-19 18:18:11.000000000 +0200
+++ xalan-c-1.11/c/src/xalanc/Harness/XalanDiagnosticMemoryManager.cpp	2017-09-03 21:15:33.000000000 +0300
@@ -166,6 +166,27 @@
 }
 
 
+static XMLSize_t
+alignPointerForNewBlockAllocation(XMLSize_t ptrSize)
+{
+	//    Macro XML_PLATFORM_NEW_BLOCK_ALIGNMENT may be defined
+	//    as needed to dictate alignment requirements on a
+	//    per-architecture basis. In the absense of that we
+	//    take an educated guess.
+#ifdef XML_PLATFORM_NEW_BLOCK_ALIGNMENT
+	static const XMLSize_t alignment = XML_PLATFORM_NEW_BLOCK_ALIGNMENT;
+#else
+	static const XMLSize_t alignment = (sizeof(void*) >= sizeof(double)) ? sizeof(void*) : sizeof(double);
+#endif
+
+	//    Calculate current alignment of pointer
+	XMLSize_t current = ptrSize % alignment;
+
+	//    Adjust pointer alignment as needed
+	return (current == 0)
+		? ptrSize
+		: (ptrSize + alignment - current);
+}
 
 void
 XalanDiagnosticMemoryManager::dumpStatistics(
@@ -210,7 +231,7 @@
             XALAN_USING_XERCES(XMLPlatformUtils);
 
             const size_type     theHeaderSize =
-                XMLPlatformUtils::alignPointerForNewBlockAllocation(sizeof(MemoryManager*));
+                alignPointerForNewBlockAllocation(sizeof(MemoryManager*));
 
             const char* const   theChars =
                 reinterpret_cast<const char*>(thePointer) + 
