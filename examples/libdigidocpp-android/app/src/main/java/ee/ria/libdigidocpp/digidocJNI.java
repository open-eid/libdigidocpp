/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ee.ria.libdigidocpp;

public class digidocJNI {
  public final static native long new_Conf();
  public final static native void delete_Conf(long jarg1);
  public final static native void Conf_init(long jarg1, Conf jarg1_);
  public final static native long Conf_instance();
  public final static native int Conf_logLevel(long jarg1, Conf jarg1_);
  public final static native String Conf_logFile(long jarg1, Conf jarg1_);
  public final static native String Conf_xsdPath(long jarg1, Conf jarg1_);
  public final static native String Conf_PKCS11Driver(long jarg1, Conf jarg1_);
  public final static native String Conf_proxyHost(long jarg1, Conf jarg1_);
  public final static native String Conf_proxyPort(long jarg1, Conf jarg1_);
  public final static native String Conf_proxyUser(long jarg1, Conf jarg1_);
  public final static native String Conf_proxyPass(long jarg1, Conf jarg1_);
  public final static native boolean Conf_proxyForceSSL(long jarg1, Conf jarg1_);
  public final static native boolean Conf_proxyTunnelSSL(long jarg1, Conf jarg1_);
  public final static native String Conf_digestUri(long jarg1, Conf jarg1_);
  public final static native String Conf_signatureDigestUri(long jarg1, Conf jarg1_);
  public final static native String Conf_ocsp(long jarg1, Conf jarg1_, String jarg2);
  public final static native String Conf_TSUrl(long jarg1, Conf jarg1_);
  public final static native String Conf_verifyServiceUri(long jarg1, Conf jarg1_);
  public final static native String Conf_PKCS12Cert(long jarg1, Conf jarg1_);
  public final static native String Conf_PKCS12Pass(long jarg1, Conf jarg1_);
  public final static native boolean Conf_PKCS12Disable(long jarg1, Conf jarg1_);
  public final static native boolean Conf_TSLAllowExpired(long jarg1, Conf jarg1_);
  public final static native boolean Conf_TSLAutoUpdate(long jarg1, Conf jarg1_);
  public final static native String Conf_TSLCache(long jarg1, Conf jarg1_);
  public final static native boolean Conf_TSLOnlineDigest(long jarg1, Conf jarg1_);
  public final static native int Conf_TSLTimeOut(long jarg1, Conf jarg1_);
  public final static native String Conf_TSLUrl(long jarg1, Conf jarg1_);
  public final static native long new_ConfV2();
  public final static native void delete_ConfV2(long jarg1);
  public final static native long ConfV2_instance();
  public final static native String appInfo();
  public final static native void terminate();
  public final static native String version();
  public final static native void delete_Container(long jarg1);
  public final static native void Container_save__SWIG_0(long jarg1, Container jarg1_, String jarg2);
  public final static native void Container_save__SWIG_1(long jarg1, Container jarg1_);
  public final static native String Container_mediaType(long jarg1, Container jarg1_);
  public final static native void Container_addDataFile(long jarg1, Container jarg1_, String jarg2, String jarg3);
  public final static native long Container_dataFiles(long jarg1, Container jarg1_);
  public final static native void Container_removeDataFile(long jarg1, Container jarg1_, long jarg2);
  public final static native void Container_addAdESSignature(long jarg1, Container jarg1_, byte[] jarg2);
  public final static native long Container_prepareSignature(long jarg1, Container jarg1_, long jarg2, Signer jarg2_);
  public final static native long Container_signatures(long jarg1, Container jarg1_);
  public final static native void Container_removeSignature(long jarg1, Container jarg1_, long jarg2);
  public final static native long Container_sign(long jarg1, Container jarg1_, long jarg2, Signer jarg2_);
  public final static native long Container_create(String jarg1);
  public final static native long Container_open(String jarg1);
  public final static native long Container_prepareWebSignature__SWIG_0(long jarg1, Container jarg1_, byte[] jarg2, String jarg3, long jarg4, StringVector jarg4_, String jarg5, String jarg6, String jarg7, String jarg8);
  public final static native long Container_prepareWebSignature__SWIG_1(long jarg1, Container jarg1_, byte[] jarg2, String jarg3, long jarg4, StringVector jarg4_, String jarg5, String jarg6, String jarg7);
  public final static native long Container_prepareWebSignature__SWIG_2(long jarg1, Container jarg1_, byte[] jarg2, String jarg3, long jarg4, StringVector jarg4_, String jarg5, String jarg6);
  public final static native long Container_prepareWebSignature__SWIG_3(long jarg1, Container jarg1_, byte[] jarg2, String jarg3, long jarg4, StringVector jarg4_, String jarg5);
  public final static native long Container_prepareWebSignature__SWIG_4(long jarg1, Container jarg1_, byte[] jarg2, String jarg3, long jarg4, StringVector jarg4_);
  public final static native long Container_prepareWebSignature__SWIG_5(long jarg1, Container jarg1_, byte[] jarg2, String jarg3);
  public final static native long Container_prepareWebSignature__SWIG_6(long jarg1, Container jarg1_, byte[] jarg2);
  public final static native void delete_DataFile(long jarg1);
  public final static native String DataFile_id(long jarg1, DataFile jarg1_);
  public final static native String DataFile_fileName(long jarg1, DataFile jarg1_);
  public final static native long DataFile_fileSize(long jarg1, DataFile jarg1_);
  public final static native String DataFile_mediaType(long jarg1, DataFile jarg1_);
  public final static native byte[] DataFile_calcDigest(long jarg1, DataFile jarg1_, String jarg2);
  public final static native void DataFile_saveAs(long jarg1, DataFile jarg1_, String jarg2);
  public final static native long new_Signature_Validator(long jarg1, Signature jarg1_);
  public final static native void delete_Signature_Validator(long jarg1);
  public final static native String Signature_Validator_diagnostics(long jarg1, Signature.Validator jarg1_);
  public final static native int Signature_Validator_status(long jarg1, Signature.Validator jarg1_);
  public final static native String Signature_POLv1_get();
  public final static native String Signature_POLv2_get();
  public final static native void delete_Signature(long jarg1);
  public final static native String Signature_id(long jarg1, Signature jarg1_);
  public final static native String Signature_claimedSigningTime(long jarg1, Signature jarg1_);
  public final static native String Signature_trustedSigningTime(long jarg1, Signature jarg1_);
  public final static native String Signature_signatureMethod(long jarg1, Signature jarg1_);
  public final static native void Signature_validate__SWIG_0(long jarg1, Signature jarg1_);
  public final static native byte[] Signature_dataToSign(long jarg1, Signature jarg1_);
  public final static native void Signature_setSignatureValue(long jarg1, Signature jarg1_, byte[] jarg2);
  public final static native void Signature_extendSignatureProfile(long jarg1, Signature jarg1_, String jarg2);
  public final static native String Signature_policy(long jarg1, Signature jarg1_);
  public final static native String Signature_SPUri(long jarg1, Signature jarg1_);
  public final static native String Signature_profile(long jarg1, Signature jarg1_);
  public final static native String Signature_city(long jarg1, Signature jarg1_);
  public final static native String Signature_stateOrProvince(long jarg1, Signature jarg1_);
  public final static native String Signature_postalCode(long jarg1, Signature jarg1_);
  public final static native String Signature_countryName(long jarg1, Signature jarg1_);
  public final static native long Signature_signerRoles(long jarg1, Signature jarg1_);
  public final static native String Signature_OCSPProducedAt(long jarg1, Signature jarg1_);
  public final static native String Signature_TimeStampTime(long jarg1, Signature jarg1_);
  public final static native String Signature_ArchiveTimeStampTime(long jarg1, Signature jarg1_);
  public final static native String Signature_streetAddress(long jarg1, Signature jarg1_);
  public final static native String Signature_signedBy(long jarg1, Signature jarg1_);
  public final static native void Signature_validate__SWIG_1(long jarg1, Signature jarg1_, String jarg2);
  public final static native byte[] Signature_messageImprint(long jarg1, Signature jarg1_);
  public final static native byte[] Signature_signingCertificateDer(long jarg1, Signature jarg1_);
  public final static native byte[] Signature_OCSPCertificateDer(long jarg1, Signature jarg1_);
  public final static native byte[] Signature_TimeStampCertificateDer(long jarg1, Signature jarg1_);
  public final static native byte[] Signature_ArchiveTimeStampCertificateDer(long jarg1, Signature jarg1_);
  public final static native long new_XmlConf__SWIG_0(String jarg1, String jarg2);
  public final static native long new_XmlConf__SWIG_1(String jarg1);
  public final static native long new_XmlConf__SWIG_2();
  public final static native void delete_XmlConf(long jarg1);
  public final static native int XmlConf_logLevel(long jarg1, XmlConf jarg1_);
  public final static native String XmlConf_logFile(long jarg1, XmlConf jarg1_);
  public final static native String XmlConf_PKCS11Driver(long jarg1, XmlConf jarg1_);
  public final static native String XmlConf_proxyHost(long jarg1, XmlConf jarg1_);
  public final static native String XmlConf_proxyPort(long jarg1, XmlConf jarg1_);
  public final static native String XmlConf_proxyUser(long jarg1, XmlConf jarg1_);
  public final static native String XmlConf_proxyPass(long jarg1, XmlConf jarg1_);
  public final static native boolean XmlConf_proxyForceSSL(long jarg1, XmlConf jarg1_);
  public final static native boolean XmlConf_proxyTunnelSSL(long jarg1, XmlConf jarg1_);
  public final static native String XmlConf_digestUri(long jarg1, XmlConf jarg1_);
  public final static native String XmlConf_signatureDigestUri(long jarg1, XmlConf jarg1_);
  public final static native String XmlConf_ocsp(long jarg1, XmlConf jarg1_, String jarg2);
  public final static native String XmlConf_TSUrl(long jarg1, XmlConf jarg1_);
  public final static native String XmlConf_verifyServiceUri(long jarg1, XmlConf jarg1_);
  public final static native String XmlConf_PKCS12Cert(long jarg1, XmlConf jarg1_);
  public final static native String XmlConf_PKCS12Pass(long jarg1, XmlConf jarg1_);
  public final static native boolean XmlConf_PKCS12Disable(long jarg1, XmlConf jarg1_);
  public final static native boolean XmlConf_TSLAutoUpdate(long jarg1, XmlConf jarg1_);
  public final static native String XmlConf_TSLCache(long jarg1, XmlConf jarg1_);
  public final static native boolean XmlConf_TSLOnlineDigest(long jarg1, XmlConf jarg1_);
  public final static native int XmlConf_TSLTimeOut(long jarg1, XmlConf jarg1_);
  public final static native void XmlConf_setProxyHost(long jarg1, XmlConf jarg1_, String jarg2);
  public final static native void XmlConf_setProxyPort(long jarg1, XmlConf jarg1_, String jarg2);
  public final static native void XmlConf_setProxyUser(long jarg1, XmlConf jarg1_, String jarg2);
  public final static native void XmlConf_setProxyPass(long jarg1, XmlConf jarg1_, String jarg2);
  public final static native void XmlConf_setProxyTunnelSSL(long jarg1, XmlConf jarg1_, boolean jarg2);
  public final static native void XmlConf_setPKCS12Cert(long jarg1, XmlConf jarg1_, String jarg2);
  public final static native void XmlConf_setPKCS12Pass(long jarg1, XmlConf jarg1_, String jarg2);
  public final static native void XmlConf_setPKCS12Disable(long jarg1, XmlConf jarg1_, boolean jarg2);
  public final static native void XmlConf_setTSLOnlineDigest(long jarg1, XmlConf jarg1_, boolean jarg2);
  public final static native void XmlConf_setTSLTimeOut(long jarg1, XmlConf jarg1_, int jarg2);
  public final static native long new_XmlConfV2__SWIG_0(String jarg1, String jarg2);
  public final static native long new_XmlConfV2__SWIG_1(String jarg1);
  public final static native long new_XmlConfV2__SWIG_2();
  public final static native void delete_XmlConfV2(long jarg1);
  public final static native int XmlConfV2_logLevel(long jarg1, XmlConfV2 jarg1_);
  public final static native String XmlConfV2_logFile(long jarg1, XmlConfV2 jarg1_);
  public final static native String XmlConfV2_PKCS11Driver(long jarg1, XmlConfV2 jarg1_);
  public final static native String XmlConfV2_proxyHost(long jarg1, XmlConfV2 jarg1_);
  public final static native String XmlConfV2_proxyPort(long jarg1, XmlConfV2 jarg1_);
  public final static native String XmlConfV2_proxyUser(long jarg1, XmlConfV2 jarg1_);
  public final static native String XmlConfV2_proxyPass(long jarg1, XmlConfV2 jarg1_);
  public final static native boolean XmlConfV2_proxyForceSSL(long jarg1, XmlConfV2 jarg1_);
  public final static native boolean XmlConfV2_proxyTunnelSSL(long jarg1, XmlConfV2 jarg1_);
  public final static native String XmlConfV2_digestUri(long jarg1, XmlConfV2 jarg1_);
  public final static native String XmlConfV2_signatureDigestUri(long jarg1, XmlConfV2 jarg1_);
  public final static native String XmlConfV2_ocsp(long jarg1, XmlConfV2 jarg1_, String jarg2);
  public final static native String XmlConfV2_TSUrl(long jarg1, XmlConfV2 jarg1_);
  public final static native String XmlConfV2_verifyServiceUri(long jarg1, XmlConfV2 jarg1_);
  public final static native String XmlConfV2_PKCS12Cert(long jarg1, XmlConfV2 jarg1_);
  public final static native String XmlConfV2_PKCS12Pass(long jarg1, XmlConfV2 jarg1_);
  public final static native boolean XmlConfV2_PKCS12Disable(long jarg1, XmlConfV2 jarg1_);
  public final static native boolean XmlConfV2_TSLAutoUpdate(long jarg1, XmlConfV2 jarg1_);
  public final static native String XmlConfV2_TSLCache(long jarg1, XmlConfV2 jarg1_);
  public final static native boolean XmlConfV2_TSLOnlineDigest(long jarg1, XmlConfV2 jarg1_);
  public final static native int XmlConfV2_TSLTimeOut(long jarg1, XmlConfV2 jarg1_);
  public final static native void XmlConfV2_setProxyHost(long jarg1, XmlConfV2 jarg1_, String jarg2);
  public final static native void XmlConfV2_setProxyPort(long jarg1, XmlConfV2 jarg1_, String jarg2);
  public final static native void XmlConfV2_setProxyUser(long jarg1, XmlConfV2 jarg1_, String jarg2);
  public final static native void XmlConfV2_setProxyPass(long jarg1, XmlConfV2 jarg1_, String jarg2);
  public final static native void XmlConfV2_setProxyTunnelSSL(long jarg1, XmlConfV2 jarg1_, boolean jarg2);
  public final static native void XmlConfV2_setPKCS12Cert(long jarg1, XmlConfV2 jarg1_, String jarg2);
  public final static native void XmlConfV2_setPKCS12Pass(long jarg1, XmlConfV2 jarg1_, String jarg2);
  public final static native void XmlConfV2_setPKCS12Disable(long jarg1, XmlConfV2 jarg1_, boolean jarg2);
  public final static native void XmlConfV2_setTSLOnlineDigest(long jarg1, XmlConfV2 jarg1_, boolean jarg2);
  public final static native void XmlConfV2_setTSLTimeOut(long jarg1, XmlConfV2 jarg1_, int jarg2);
  public final static native void delete_Signer(long jarg1);
  public final static native byte[] Signer_sign(long jarg1, Signer jarg1_, String jarg2, byte[] jarg3);
  public final static native String Signer_method(long jarg1, Signer jarg1_);
  public final static native String Signer_profile(long jarg1, Signer jarg1_);
  public final static native boolean Signer_usingENProfile(long jarg1, Signer jarg1_);
  public final static native String Signer_city(long jarg1, Signer jarg1_);
  public final static native String Signer_streetAddress(long jarg1, Signer jarg1_);
  public final static native String Signer_stateOrProvince(long jarg1, Signer jarg1_);
  public final static native String Signer_postalCode(long jarg1, Signer jarg1_);
  public final static native String Signer_countryName(long jarg1, Signer jarg1_);
  public final static native long Signer_signerRoles(long jarg1, Signer jarg1_);
  public final static native void Signer_setMethod(long jarg1, Signer jarg1_, String jarg2);
  public final static native void Signer_setProfile(long jarg1, Signer jarg1_, String jarg2);
  public final static native void Signer_setENProfile(long jarg1, Signer jarg1_, boolean jarg2);
  public final static native void Signer_setSignatureProductionPlace(long jarg1, Signer jarg1_, String jarg2, String jarg3, String jarg4, String jarg5);
  public final static native void Signer_setSignatureProductionPlaceV2(long jarg1, Signer jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, String jarg6);
  public final static native void Signer_setSignerRoles(long jarg1, Signer jarg1_, long jarg2, StringVector jarg2_);
  public final static native long new_PKCS12Signer(String jarg1, String jarg2);
  public final static native void delete_PKCS12Signer(long jarg1);
  public final static native long new_PKCS11Signer__SWIG_0(String jarg1);
  public final static native long new_PKCS11Signer__SWIG_1();
  public final static native void delete_PKCS11Signer(long jarg1);
  public final static native void PKCS11Signer_setPin(long jarg1, PKCS11Signer jarg1_, String jarg2);
  public final static native long new_StringVector__SWIG_0();
  public final static native long new_StringVector__SWIG_1(long jarg1);
  public final static native long StringVector_size(long jarg1, StringVector jarg1_);
  public final static native long StringVector_capacity(long jarg1, StringVector jarg1_);
  public final static native void StringVector_reserve(long jarg1, StringVector jarg1_, long jarg2);
  public final static native boolean StringVector_isEmpty(long jarg1, StringVector jarg1_);
  public final static native void StringVector_clear(long jarg1, StringVector jarg1_);
  public final static native void StringVector_add(long jarg1, StringVector jarg1_, String jarg2);
  public final static native String StringVector_get(long jarg1, StringVector jarg1_, int jarg2);
  public final static native void StringVector_set(long jarg1, StringVector jarg1_, int jarg2, String jarg3);
  public final static native void delete_StringVector(long jarg1);
  public final static native long new_DataFiles__SWIG_0();
  public final static native long new_DataFiles__SWIG_1(long jarg1);
  public final static native long DataFiles_size(long jarg1, DataFiles jarg1_);
  public final static native long DataFiles_capacity(long jarg1, DataFiles jarg1_);
  public final static native void DataFiles_reserve(long jarg1, DataFiles jarg1_, long jarg2);
  public final static native boolean DataFiles_isEmpty(long jarg1, DataFiles jarg1_);
  public final static native void DataFiles_clear(long jarg1, DataFiles jarg1_);
  public final static native void DataFiles_add(long jarg1, DataFiles jarg1_, long jarg2, DataFile jarg2_);
  public final static native long DataFiles_get(long jarg1, DataFiles jarg1_, int jarg2);
  public final static native void DataFiles_set(long jarg1, DataFiles jarg1_, int jarg2, long jarg3, DataFile jarg3_);
  public final static native void delete_DataFiles(long jarg1);
  public final static native long new_Signatures__SWIG_0();
  public final static native long new_Signatures__SWIG_1(long jarg1);
  public final static native long Signatures_size(long jarg1, Signatures jarg1_);
  public final static native long Signatures_capacity(long jarg1, Signatures jarg1_);
  public final static native void Signatures_reserve(long jarg1, Signatures jarg1_, long jarg2);
  public final static native boolean Signatures_isEmpty(long jarg1, Signatures jarg1_);
  public final static native void Signatures_clear(long jarg1, Signatures jarg1_);
  public final static native void Signatures_add(long jarg1, Signatures jarg1_, long jarg2, Signature jarg2_);
  public final static native long Signatures_get(long jarg1, Signatures jarg1_, int jarg2);
  public final static native void Signatures_set(long jarg1, Signatures jarg1_, int jarg2, long jarg3, Signature jarg3_);
  public final static native void delete_Signatures(long jarg1);
  public final static native void initializeLib(String jarg1, String jarg2);
  public final static native void initializeLibWithTSL(String jarg1, String jarg2, String jarg3, byte[] jarg4);
  public final static native long ConfV2_SWIGUpcast(long jarg1);
  public final static native long XmlConf_SWIGUpcast(long jarg1);
  public final static native long XmlConfV2_SWIGUpcast(long jarg1);
  public final static native long PKCS12Signer_SWIGUpcast(long jarg1);
  public final static native long PKCS11Signer_SWIGUpcast(long jarg1);
}
