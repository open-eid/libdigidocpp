apply plugin: 'com.android.application'

def libsPath = '/Library/libdigidocpp'

android {
    compileSdk 35
    defaultConfig {
        applicationId "ee.ria.libdigidocpp"
        minSdk 30
        targetSdk 35
        versionCode 1
        versionName "1.0"
        if (System.getenv("BUILD_NUMBER")) {
            versionCode Integer.parseInt(System.getenv("BUILD_NUMBER"))
            versionName "1.0." + System.getenv("BUILD_NUMBER")
        }
        setProperty("archivesBaseName", "libdigidocpp-android-$versionName")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_17
        sourceCompatibility JavaVersion.VERSION_17
    }
    sourceSets.main.java.srcDirs += [libsPath + '.androidarm/include']
    namespace 'ee.ria.libdigidocpp'
}

tasks.register('schemaZip', Zip) {
    println "Create schema zip"
    from(libsPath + '.androidarm/etc/digidocpp/schema/') {
        include '*'
    }
    destinationDirectory = file('src/main/res/raw/')
    archiveFileName = 'schema.zip'
}

tasks.register('copyLibs') {
    println "Copy jniLibs"
    copy {
        from libsPath + '.androidarm/lib/libdigidoc_java.so'
        into 'src/main/jniLibs/armeabi-v7a'
    }
    copy {
        from libsPath + '.androidarm64/lib/libdigidoc_java.so'
        into 'src/main/jniLibs/arm64-v8a'
    }
    copy {
        from libsPath + '.androidx86_64/lib/libdigidoc_java.so'
        into 'src/main/jniLibs/x86_64'
    }
}

preBuild.dependsOn schemaZip, copyLibs
